I"§<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

<hr />
<p>layout: post
title: PIC 16B - Blog Post 4
â€”</p>

<p>Jun Hurâ€™s Blog Post 4 for PIC 16B!</p>

<h1 id="spectral-clustering">Spectral Clustering</h1>

<p>Here, we will write a tutorial on a simple version of the spectral clustering algorithm for clustering data points.</p>

<h2 id="notation">Notation</h2>
<p>In all the math below:</p>

<ul>
  <li>Boldface capital letters like <strong>A</strong> refer to matrices (2d arrays of numbers).</li>
  <li>Boldface lowercase letters like <strong>v</strong> refer to vectors (1d arrays of numbers).</li>
  <li><strong>AB</strong> refers to a matrix-matrix product (A@B). <strong>Av</strong> refers to a matrix-vector product (A@v)</li>
</ul>

<h2 id="part-a--similarity-matrix--a">Part A : <em>Similarity Matrix</em>  <strong>A</strong></h2>

<p>Here, <strong>A</strong> will be a matrix (2d) with shape <code class="language-plaintext highlighter-rouge">(n,n)</code>, where each entry <code class="language-plaintext highlighter-rouge">A[i,j]</code> is equal to 1 if <code class="language-plaintext highlighter-rouge">X[i]</code> (the coordinates of data point <code class="language-plaintext highlighter-rouge">i</code>) is within distance <code class="language-plaintext highlighter-rouge">epsilon</code> of <code class="language-plaintext highlighter-rouge">X[j]</code>, and <code class="language-plaintext highlighter-rouge">0</code> otherwise</p>

<p>For this part, we will use <code class="language-plaintext highlighter-rouge">epsilon = 0.4</code></p>

<p>First, letâ€™s set up the basics:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">1234</span><span class="p">)</span>
<span class="n">n</span> <span class="o">=</span> <span class="mi">200</span>
<span class="n">X</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">datasets</span><span class="p">.</span><span class="n">make_moons</span><span class="p">(</span><span class="n">n_samples</span><span class="o">=</span><span class="n">n</span><span class="p">,</span> <span class="n">shuffle</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">noise</span><span class="o">=</span><span class="mf">0.05</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="bp">None</span><span class="p">)</span>
</code></pre></div></div>

<p><strong>X</strong> <code class="language-plaintext highlighter-rouge">(n x 2)</code> is a matrix representing <code class="language-plaintext highlighter-rouge">n</code> data points.</p>

<p><img src="/images/blog_4_A_0.JPG" alt="_config.yml" /></p>

<p>To create such matrix <strong>A</strong>, we need to use <code class="language-plaintext highlighter-rouge">sklearn.metrics.pairwise</code> from <code class="language-plaintext highlighter-rouge">pairwise_distances</code>. The doc for this is <a href="https://scikit-learn.org/stable/modules/generated/sklearn.metrics.pairwise_distances.html"> here </a>.</p>

<p>First, we fill in the entries of <strong>A</strong> with <code class="language-plaintext highlighter-rouge">True</code> or <code class="language-plaintext highlighter-rouge">False</code>, depending on whether <code class="language-plaintext highlighter-rouge">X</code> is within distance of epsilon of <code class="language-plaintext highlighter-rouge">X[j]</code>. Then, we convert the entry values to <code class="language-plaintext highlighter-rouge">0</code> or <code class="language-plaintext highlighter-rouge">1</code>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">A</span> <span class="o">=</span> <span class="p">(</span><span class="n">sklearn</span><span class="p">.</span><span class="n">metrics</span><span class="p">.</span><span class="n">pairwise_distances</span><span class="p">(</span><span class="n">X</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">epsilon</span><span class="p">)</span>
<span class="n">A</span>
</code></pre></div></div>

<p><img src="/images/blog_4_A_1.JPG" alt="_config.yml" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">A</span> <span class="o">=</span> <span class="n">A</span><span class="p">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">int</span><span class="p">)</span>
<span class="n">A</span>
</code></pre></div></div>
<p><img src="/images/blog_4_A_2.JPG" alt="_config.yml" /></p>

<p>Finally, we set the entries of <strong>A</strong> to 0, that is, <code class="language-plaintext highlighter-rouge">A[i,i] = 0</code>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="n">fill_diagonal</span><span class="p">(</span><span class="n">A</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span>
<span class="n">A</span>
</code></pre></div></div>
<p><img src="/images/blog_4_A_3.JPG" alt="_config.yml" /></p>

<h2 id="part-b1--the-cut-term">Part B.1 : The Cut Term</h2>

<p>We will call $  $</p>
:ET